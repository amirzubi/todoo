{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","components/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","className","value","onChange","e","target","type","placeholder","autoFocus","onClick","preventDefault","text","completed","id","Math","random","Todo","todo","map","item","filter","el","TodoList","filteredTodos","Filter","name","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cee5585d.chunk.js","sourcesContent":["const Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 },\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-box\">\r\n      <form>\r\n        <input\r\n          value={inputText}\r\n          onChange={inputTextHandler}\r\n          type=\"text\"\r\n          className=\"todo-input\"\r\n          placeholder=\"Write your task here\"\r\n          autoFocus\r\n        />\r\n        <button\r\n          onClick={submitTodoHandler}\r\n          className=\"todo-button\"\r\n          type=\"submit\"\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import TodoList from \"./TodoList\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n  // Events\r\n  // Delete Todo\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n  // Complete Todo\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"div todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","// Import components\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo setTodos={setTodos} todos={todos} key={todo.id} todo={todo} text={todo.text} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","const Filter = ({ setStatus }) => {\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <ul onClick={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n        <option value=\"all\">All</option>\r\n        <option value=\"completed\">Completed</option>\r\n        <option value=\"uncompleted\">Uncompleted</option>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n// Importing Components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport Filter from \"./components/Filter\";\n\nfunction App() {\n  // States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState([\"all\"]);\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // Run once when the app starts\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  //Use Effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  // Functions\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  // Save to local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <a className=\"logo\" href=\"/\">\n          todoo\n        </a>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <main>\n        <Filter setStatus={setStatus} />\n        <TodoList\n          setTodos={setTodos}\n          todos={todos}\n          filteredTodos={filteredTodos}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}